// All direct descendents of .grid get treated the same way.
// This might be overkill for some, but it's a time-saver for me.
.#{$bagel-grid-column-namespace} {
  box-sizing: border-box;
  display: block;
  min-height: 1px;
  padding-left: $bagel-gutter-width;
  vertical-align: top;
  width: 100%;

  @media (max-width: $bagel-breakpoint-small) and (min-width: 0px) {
    &[class*="#{$bagel-grid-column-namespace}"] {
      margin-right: -.24em;
    }
    &.#{$bagel-grid-column-namespace}--1-of-1 {
      width: percentage(1/1);
      display: block;
    }
    &.#{$bagel-grid-column-namespace}--1-of-2 {
      width: percentage(1/2);
      display: inline-block;
    }

    &.#{$bagel-grid-column-namespace}--2-of-2 {
      @extend .#{$bagel-grid-column-namespace}--1-of-1;
    }
    &.#{$bagel-grid-column-namespace}--1-of-3 {
      width: percentage(1/3);
      display: inline-block;
    }
    &.#{$bagel-grid-column-namespace}--2-of-3 {
      width: percentage(2/3);
      display: inline-block;
    }
    &.#{$bagel-grid-column-namespace}--1-of-4 {
      width: percentage(1/4);
      display: inline-block;
    }
    &.#{$bagel-grid-column-namespace}--2-of-4 {
      @extend .#{$bagel-grid-column-namespace}--1-of-2;
    }
    &.#{$bagel-grid-column-namespace}--3-of-4 {
      width: percentage(3/4);
    }
    &.#{$bagel-grid-column-namespace}--4-of-4 {
      @extend .#{$bagel-grid-column-namespace}--1-of-1;
    }
  }

  @media (max-width: $bagel-breakpoint-medium) and (min-width: $bagel-breakpoint-small) {
    &[class*="#{$bagel-grid-column-namespace}--m-"] {
      display: inline-block;
    }
    &.#{$bagel-grid-column-namespace}--m-1-of-2 {
      width: percentage(1/2);
    }
    &.#{$bagel-grid-column-namespace}--m-1-of-3 {
      width: percentage(1/3);
    }
    &.#{$bagel-grid-column-namespace}--m-2-of-3 {
      width: percentage(2/3);
    }
    &.#{$bagel-grid-column-namespace}--m-1-of-4 {
      width: percentage(1/4);
    }
    &.#{$bagel-grid-column-namespace}--m-2-of-4 {
      @extend .#{$bagel-grid-column-namespace}--m-1-of-2;
    }
    &.#{$bagel-grid-column-namespace}--m-3-of-4 {
      width: percentage(3/4);
    }
  }
  @media (min-width: $bagel-breakpoint-medium) {
    display: inline-block;

    &[class*="#{$bagel-grid-column-namespace}--l-"] {
      display: inline-block;
      margin-right: -.24em;
    }

    &.#{$bagel-grid-column-namespace}--l-1-of-2 {
      width: percentage(1/2);
    }

    &.#{$bagel-grid-column-namespace}--l-1-of-3 {
      width: percentage(1/3);
    }

    &.#{$bagel-grid-column-namespace}--l-2-of-3 {
      width: percentage(2/3);
    }

    &.#{$bagel-grid-column-namespace}--l-1-of-4 {
      width: percentage(1/4);
    }

    &.#{$bagel-grid-column-namespace}--l-2-of-4 {
      @extend .#{$bagel-grid-column-namespace}--l-1-of-2;
    }
    &.#{$bagel-grid-column-namespace}--l-3-of-4 {
      width: percentage(3/4);
    }
  }
}

// Custom medium grid
@media (max-width: $bagel-breakpoint-medium) and (min-width: $bagel-breakpoint-small) {
// For each of our column groups...
  @each $group in $bagel-col-groups {
    // For each column width from 1 to the column group...
    @if ($bagel-medium-custom-grid) {
      @for $i from 1 through $group {
        .#{$bagel-grid-column-namespace}--m-#{$i}-of-#{$group} {
          @if percentage($i/$group) == percentage(1/2)
          {
            @extend .#{$bagel-grid-column-namespace}--m-1-of-2;
          }
          @else if percentage($i/$group) == percentage(1/3)
          {
            @extend .#{$bagel-grid-column-namespace}--m-1-of-3;
          }
          @else if percentage($i/$group) == percentage(2/3)
          {
            @extend .#{$bagel-grid-column-namespace}--m-2-of-3;
          }
          @else if percentage($i/$group) == percentage(1/4)
          {
            @extend .#{$bagel-grid-column-namespace}--m-1-of-4;
          }
          @else if percentage($i/$group) == percentage(3/4)
          {
            @extend .#{$bagel-grid-column-namespace}--m-3-of-4;
          }
          @else
          {
              width: percentage($i/$group);
          }
        }
      }
    }
  }
}
// Custom large grid
@media (min-width: $bagel-breakpoint-medium) {
// For each of our column groups...
  @each $group in $bagel-col-groups {
    // For each column width from 1 to the column group...
    @if ($bagel-large-custom-grid) {
      @for $i from 1 through $group {
        .#{$bagel-grid-column-namespace}--l-#{$i}-of-#{$group} {
          @if percentage($i/$group) == percentage(1/2)
          {
            @extend .#{$bagel-grid-column-namespace}--l-1-of-2;
          }
          @else if percentage($i/$group) == percentage(1/3)
          {
            @extend .#{$bagel-grid-column-namespace}--l-1-of-3;
          }
          @else if percentage($i/$group) == percentage(2/3)
          {
            @extend .#{$bagel-grid-column-namespace}--l-2-of-3;
          }
          @else if percentage($i/$group) == percentage(1/4)
          {
            @extend .#{$bagel-grid-column-namespace}--l-1-of-4;
          }
          @else if percentage($i/$group) == percentage(3/4)
          {
            @extend .#{$bagel-grid-column-namespace}--l-3-of-4;
          }
          @else
          {
              width: percentage($i/$group);
          }
        }
      }
    }
  }
}


//The gutters
#{$bagel-grid-namespace} {
  list-style: none;
  margin-left: -$bagel-gutter-width;
}
